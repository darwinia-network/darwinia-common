name: CI
on:
    push:
        branches:
            - main
            - master
    pull_request:
        branches:
            - main
            - master

jobs:
    build_kit:
        name: Build kit
        runs-on: ubuntu-latest
        steps:
            - name: Fetch latest code
              uses: actions/checkout@v2
              with:
                  repository: darwinia-network/darwinia-kit
                  ref: 17064bd5eee5b384581511ec65f9a161aea04176
            - name: Install Rust nightly-2021-08-03 toolchain
              uses: actions-rs/toolchain@v1
              with:
                  toolchain: nightly-2021-08-03
                  default: true
            - name: Build
              uses: actions-rs/cargo@v1
              with:
                  command: build
                  args: --manifest-path ci-bot/Cargo.toml
            - name: Compress kit
              run: |
                  mv ci-bot avoid-same-name
                  cp target/debug/ci-bot .
                  tar cf kit.tar.zst ci-bot -I pzstd
            - name: Upload kit
              uses: actions/upload-artifact@v2
              with:
                  name: kit
                  path: kit.tar.zst
    build_node_and_internal_test:
        name: Build node and internal test
        runs-on: ubuntu-latest
        steps:
            - name: Fetch latest code
              uses: actions/checkout@v2
            - name: Install Rust nightly-2021-08-03 toolchain
              uses: actions-rs/toolchain@v1
              with:
                  toolchain: nightly-2021-08-03
                  target: wasm32-unknown-unknown
                  default: true
            - name: Build
              uses: actions-rs/cargo@v1
              with:
                  command: build
            - name: Test
              uses: actions-rs/cargo@v1
              with:
                  command: test
              env:
                  CARGO_INCREMENTAL: 0
            - name: Compress node
              run: cp target/debug/drml . && tar cf node.tar.zst drml -I pzstd
            - name: Upload node
              uses: actions/upload-artifact@v2
              with:
                  name: node
                  path: node.tar.zst
    check_default_features:
        name: Check default features
        runs-on: ubuntu-latest
        needs: [build_kit]
        steps:
            - name: Fetch latest code
              uses: actions/checkout@v2
            - name: Download kit
              uses: actions/download-artifact@v2
              with:
                  name: kit
            - name: Uncompress kit
              run: tar xf kit.tar.zst -I pzstd
            - name: Run checker
              run: ./ci-bot default-features --project-dir ../darwinia-common
    check_rust_code:
        name: Check Rust code
        runs-on: ubuntu-latest
        steps:
            - name: Fetch latest code
              uses: actions/checkout@v2
            - name: Install Rust nightly-2021-08-03 toolchain
              uses: actions-rs/toolchain@v1
              with:
                  toolchain: nightly-2021-08-03
                  target: wasm32-unknown-unknown
                  default: true
            - name: Run checker
              uses: actions-rs/cargo@v1
              with:
                  command: check
    check_storage_prefix:
        name: Check storage prefix
        runs-on: ubuntu-latest
        needs: [build_kit, build_node_and_internal_test]
        outputs:
            result: ${{ steps.run_checker.outputs.result }}
        steps:
            - name: Download kit
              uses: actions/download-artifact@v2
              with:
                  name: kit
            - name: Download node
              uses: actions/download-artifact@v2
              with:
                  name: node
            - name: Uncompress kit and node
              run: tar xf kit.tar.zst -I pzstd && tar xf node.tar.zst -I pzstd
            - id: run_checker
              name: Run checker
              run: |
                  OUTPUT=$(./ci-bot storage-prefix --chain pangolin --exec ./drml)
                  OUTPUT="${OUTPUT//'%'/'%25'}​【7,6 m】"
                  OUTPUT="${OUTPUT//$'\n'/'%0A'}"
                  OUTPUT="${OUTPUT//$'\r'/'%0D'}"
                  echo "::set-output name=result::$OUTPUT"
            - uses: marocchino/sticky-pull-request-comment@v2
              with:
                  append: true
                  message: |
                      Check storage prefix with ${{ github.sha }}.
                      ```diff
                      ${{ steps.run_checker.outputs.result }}
                      ```
    external_test:
        name: External test
        runs-on: ubuntu-latest
        needs: [build_node_and_internal_test]
        steps:
            - name: Download node
              uses: actions/download-artifact@v2
              with:
                  name: node
            - name: Uncompress kit and node
              run: tar xf node.tar.zst -I pzstd
            - name: Launch node
              run: ./drml --dev --tmp &
            - name: Fetch latest code
              uses: actions/checkout@v2
            - name: Install nodejs 10
              uses: actions/setup-node@v1
              with:
                  node-version: 10
            - name: DVM test
              run: cd tests/dvm && npm install && sleep 30 && npm test
    clean_artifacts:
        name: Clean artifacts
        runs-on: ubuntu-latest
        if: always()
        needs: [check_storage_prefix, external_test]
        steps:
            - uses: geekyeggo/delete-artifact@v1
              with:
                  name: |
                      kit
                      node
