[workspace]
members = [
	# node
	"bin/node/cli",
	"bin/node/primitives",
	"bin/node/runtime/pangolin",
	# client
	"client/cli",
	"client/dvm/consensus",
	"client/dvm/rpc",
	# frame
	"frame/balances",
	"frame/balances/rpc",
	"frame/balances/rpc/runtime-api",
	"frame/bridge/crab/backing",
	"frame/bridge/crab/issuing",
	"frame/bridge/ethereum/backing",
	"frame/bridge/ethereum/linear-relay",
	"frame/bridge/ethereum/relay",
	"frame/bridge/relayer-game",
	"frame/bridge/relay-authorities",
	"frame/bridge/tron/backing",
	"frame/claims",
	"frame/democracy",
	"frame/dvm",
	"frame/dvm/rpc",
	"frame/dvm/rpc/runtime-api",
	"frame/elections-phragmen",
	"frame/evm",
	"frame/evm/precompile/blake2",
	"frame/evm/precompile/bn128",
	"frame/evm/precompile/dispatch",
	"frame/evm/precompile/ed25519",
	"frame/evm/precompile/modexp",
	"frame/evm/precompile/simple",
	"frame/header-mmr",
	"frame/header-mmr/rpc",
	"frame/header-mmr/rpc/runtime-api",
	"frame/staking",
	"frame/staking/rpc",
	"frame/staking/rpc/runtime-api",
	"frame/support",
	"frame/treasury",
	"frame/vesting",
	# primitives
	"primitives/array-bytes",
	"primitives/consensus",
	"primitives/dvm-rpc-core",
	"primitives/ethereum-primitives",
	"primitives/evm",
	"primitives/merkle-patricia-trie",
	"primitives/relay",
]

# The list of dependencies below (which can be both direct and indirect dependencies) are crates
# that are suspected to be CPU-intensive, and that are unlikely to require debugging (as some of
# their debug info might be missing) or to require to be frequently recompiled. We compile these
# dependencies with `opt-level=3` even in "dev" mode in order to make "dev" mode more usable.
# The majority of these crates are cryptographic libraries.
#
# Note that this does **not** affect crates that depend on Substrate. In other words, if you add
# a dependency on Substrate, you have to copy-paste this list in your own `Cargo.toml` (assuming
# that you want the same list). This list is only relevant when running `cargo build` from within
# the Substrate workspace.
#
# If you see an error mentioning "profile package spec ... did not match any packages", it
# probably concerns this list.
#
# This list is ordered alphabetically.
[profile.dev.package]
aes-soft         = { opt-level = 3 }
aesni            = { opt-level = 3 }
blake2           = { opt-level = 3 }
blake2-rfc       = { opt-level = 3 }
blake2b_simd     = { opt-level = 3 }
blake2s_simd     = { opt-level = 3 }
crc32fast        = { opt-level = 3 }
crossbeam-deque  = { opt-level = 3 }
crossbeam-queue  = { opt-level = 3 }
crypto-mac       = { opt-level = 3 }
curve25519-dalek = { opt-level = 3 }
ed25519-dalek    = { opt-level = 3 }
flate2           = { opt-level = 3 }
futures-channel  = { opt-level = 3 }
h2               = { opt-level = 3 }
hash-db          = { opt-level = 3 }
hashbrown        = { opt-level = 3 }
hmac             = { opt-level = 3 }
httparse         = { opt-level = 3 }
integer-sqrt     = { opt-level = 3 }
keccak           = { opt-level = 3 }
libm             = { opt-level = 3 }
librocksdb-sys   = { opt-level = 3 }
libsecp256k1     = { opt-level = 3 }
libz-sys         = { opt-level = 3 }
mio              = { opt-level = 3 }
nalgebra         = { opt-level = 3 }
num-bigint       = { opt-level = 3 }
parking_lot      = { opt-level = 3 }
parking_lot_core = { opt-level = 3 }
percent-encoding = { opt-level = 3 }
primitive-types  = { opt-level = 3 }
ring             = { opt-level = 3 }
rustls           = { opt-level = 3 }
sha2             = { opt-level = 3 }
sha3             = { opt-level = 3 }
smallvec         = { opt-level = 3 }
snow             = { opt-level = 3 }
twox-hash        = { opt-level = 3 }
uint             = { opt-level = 3 }
wasmi            = { opt-level = 3 }
x25519-dalek     = { opt-level = 3 }
yamux            = { opt-level = 3 }
zeroize          = { opt-level = 3 }

[profile.release]
# Darwinia runtime requires unwinding.
panic = "unwind"
