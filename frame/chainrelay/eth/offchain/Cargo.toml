[package]
name = "darwinia-eth-offchain"
version = "0.1.0"
authors = ["Darwinia Network <hello@darwinia.network>"]
description = "FRAME pallet to relay Ethereum header automactically"
edition = "2018"
license = "GPL-3.0"
homepage = "https://darwinia.network/"
repository = "https://github.com/darwinia-network/darwinia/"

[dependencies]
# crates
codec = { package = "parity-scale-codec", version = "1.3.0", default-features = false, features = ["derive"] }
hex = { version = "0.4.2", default-features = false }
# darwinia
darwinia-eth-relay = { default-features = false, path = "../relay" }
eth-primitives = { default-features = false, path = "../../../../primitives/eth-primitives" }
# github
rlp = { default-features = false, git = "https://github.com/darwinia-network/parity-common.git" }
simple-json = { version = "0.1.5", default-features = false, git = "https://github.com/jimmychu0807/simple-json" }
# substrate
frame-support = { default-features = false, git = "https://github.com/darwinia-network/substrate.git", tag = "v2.0.0-alpha.darwinia.1" }
frame-system = { default-features = false, git = "https://github.com/darwinia-network/substrate.git", tag = "v2.0.0-alpha.darwinia.1" }
sp-runtime = { default-features = false, git = "https://github.com/darwinia-network/substrate.git", tag = "v2.0.0-alpha.darwinia.1" }
sp-std = { default-features = false, git = "https://github.com/darwinia-network/substrate.git", tag = "v2.0.0-alpha.darwinia.1" }

[dev-dependencies]
# darwinia
darwinia-support = { package = "darwinia-support", path = "../../../../frame/support" }
# substrate
pallet-timestamp = { git = "https://github.com/darwinia-network/substrate.git", tag = "v2.0.0-alpha.darwinia.1" }
sp-core = { git = "https://github.com/darwinia-network/substrate.git", tag = "v2.0.0-alpha.darwinia.1" }

[features]
default = ["std"]
std = [
	# crates
	"codec/std",
	"hex/std",
	# darwinia
	"darwinia-eth-relay/std",
	"eth-primitives/std",
	# github
	"rlp/std",
	"simple-json/std",
	# substrate
	"frame-support/std",
	"frame-system/std",
	"sp-runtime/std",
	"sp-std/std",
]
